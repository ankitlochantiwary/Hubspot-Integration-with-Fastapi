{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monocept-HYD\\\\OneDrive - Monocept Consulting Pvt Ltd\\\\Desktop\\\\vscode\\\\hubspot_integration_fastapi\\\\frontend\\\\src\\\\integration-form.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import {\n//     Box,\n//     Autocomplete,\n//     TextField,\n// } from '@mui/material';\n// import { DataForm } from './data-form';\n// import { HubSpotIntegration } from './integrations/hubspot';\n// import { AirtableIntegration } from './integrations/airtable';\n// import { NotionIntegration } from './integrations/notion';\n\n// const integrationMapping = {\n//     'HubSpot': HubSpotIntegration,\n//     'Notion': NotionIntegration,\n//     'Airtable': AirtableIntegration,\n// };\n\n// export const IntegrationForm = () => {\n//     const [integrationParams, setIntegrationParams] = useState({});\n//     const [user, setUser] = useState('TestUser');\n//     const [org, setOrg] = useState('TestOrg');\n//     const [currType, setCurrType] = useState(null);\n//     const CurrIntegration = integrationMapping[currType];\n\n//     return (\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\n//             <Box display='flex' flexDirection='column'>\n//                 <TextField\n//                     label=\"User\"\n//                     value={user}\n//                     onChange={(e) => setUser(e.target.value)}\n//                     sx={{ mt: 2 }}\n//                 />\n//                 <TextField\n//                     label=\"Organization\"\n//                     value={org}\n//                     onChange={(e) => setOrg(e.target.value)}\n//                     sx={{ mt: 2 }}\n//                 />\n//                 <Autocomplete\n//                     id=\"integration-type\"\n//                     options={Object.keys(integrationMapping)}\n//                     sx={{ width: 300, mt: 2 }}\n//                     renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\n//                     onChange={(e, value) => setCurrType(value)}\n//                 />\n//             </Box>\n//             {currType &&\n//                 <Box>\n//                     <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\n//                 </Box>\n//             }\n//             {integrationParams?.credentials &&\n//                 <Box sx={{ mt: 2 }}>\n//                     <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\n//                 </Box>\n//             }\n//         </Box>\n//     );\n// }\n\nimport { useState } from 'react';\nimport { Box, Autocomplete, TextField } from '@mui/material';\nimport { DataForm } from './data-form';\nimport { HubspotIntegration } from './integrations/hubspot';\nimport { AirtableIntegration } from './integrations/airtable';\nimport { NotionIntegration } from './integrations/notion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst integrationMapping = {\n  'HubSpot': HubspotIntegration,\n  'Notion': NotionIntegration,\n  'Airtable': AirtableIntegration\n};\nexport const IntegrationForm = () => {\n  _s();\n  const [integrationParams, setIntegrationParams] = useState({});\n  const [user, setUser] = useState('TestUser');\n  const [org, setOrg] = useState('TestOrg');\n  const [currType, setCurrType] = useState(null);\n  const CurrIntegration = integrationMapping[currType];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"User\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Organization\",\n        value: org,\n        onChange: e => setOrg(e.target.value),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"integration-type\",\n        options: Object.keys(integrationMapping),\n        sx: {\n          width: 300,\n          mt: 2\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params,\n          label: \"Integration Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 46\n        }, this),\n        onChange: (e, value) => setCurrType(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), currType && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(CurrIntegration, {\n        user: user,\n        org: org,\n        integrationParams: integrationParams,\n        setIntegrationParams: setIntegrationParams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), (integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials) && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(DataForm, {\n        integrationType: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.type,\n        credentials: integrationParams === null || integrationParams === void 0 ? void 0 : integrationParams.credentials\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(IntegrationForm, \"xvZhzmI5B2a5MpNKGxfH76a84tE=\");\n_c = IntegrationForm;\nvar _c;\n$RefreshReg$(_c, \"IntegrationForm\");","map":{"version":3,"names":["useState","Box","Autocomplete","TextField","DataForm","HubspotIntegration","AirtableIntegration","NotionIntegration","jsxDEV","_jsxDEV","integrationMapping","IntegrationForm","_s","integrationParams","setIntegrationParams","user","setUser","org","setOrg","currType","setCurrType","CurrIntegration","display","justifyContent","alignItems","flexDirection","sx","width","children","label","value","onChange","e","target","mt","fileName","_jsxFileName","lineNumber","columnNumber","id","options","Object","keys","renderInput","params","credentials","integrationType","type","_c","$RefreshReg$"],"sources":["C:/Users/Monocept-HYD/OneDrive - Monocept Consulting Pvt Ltd/Desktop/vscode/hubspot_integration_fastapi/frontend/src/integration-form.js"],"sourcesContent":["// import { useState } from 'react';\r\n// import {\r\n//     Box,\r\n//     Autocomplete,\r\n//     TextField,\r\n// } from '@mui/material';\r\n// import { DataForm } from './data-form';\r\n// import { HubSpotIntegration } from './integrations/hubspot';\r\n// import { AirtableIntegration } from './integrations/airtable';\r\n// import { NotionIntegration } from './integrations/notion';\r\n\r\n// const integrationMapping = {\r\n//     'HubSpot': HubSpotIntegration,\r\n//     'Notion': NotionIntegration,\r\n//     'Airtable': AirtableIntegration,\r\n// };\r\n\r\n// export const IntegrationForm = () => {\r\n//     const [integrationParams, setIntegrationParams] = useState({});\r\n//     const [user, setUser] = useState('TestUser');\r\n//     const [org, setOrg] = useState('TestOrg');\r\n//     const [currType, setCurrType] = useState(null);\r\n//     const CurrIntegration = integrationMapping[currType];\r\n\r\n//     return (\r\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\r\n//             <Box display='flex' flexDirection='column'>\r\n//                 <TextField\r\n//                     label=\"User\"\r\n//                     value={user}\r\n//                     onChange={(e) => setUser(e.target.value)}\r\n//                     sx={{ mt: 2 }}\r\n//                 />\r\n//                 <TextField\r\n//                     label=\"Organization\"\r\n//                     value={org}\r\n//                     onChange={(e) => setOrg(e.target.value)}\r\n//                     sx={{ mt: 2 }}\r\n//                 />\r\n//                 <Autocomplete\r\n//                     id=\"integration-type\"\r\n//                     options={Object.keys(integrationMapping)}\r\n//                     sx={{ width: 300, mt: 2 }}\r\n//                     renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\r\n//                     onChange={(e, value) => setCurrType(value)}\r\n//                 />\r\n//             </Box>\r\n//             {currType &&\r\n//                 <Box>\r\n//                     <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\r\n//                 </Box>\r\n//             }\r\n//             {integrationParams?.credentials &&\r\n//                 <Box sx={{ mt: 2 }}>\r\n//                     <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\r\n//                 </Box>\r\n//             }\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Autocomplete,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { DataForm } from './data-form';\r\nimport { HubspotIntegration } from './integrations/hubspot';\r\nimport { AirtableIntegration } from './integrations/airtable';\r\nimport { NotionIntegration } from './integrations/notion';\r\n\r\nconst integrationMapping = {\r\n    'HubSpot': HubspotIntegration,\r\n    'Notion': NotionIntegration,\r\n    'Airtable': AirtableIntegration,\r\n};\r\n\r\nexport const IntegrationForm = () => {\r\n    const [integrationParams, setIntegrationParams] = useState({});\r\n    const [user, setUser] = useState('TestUser');\r\n    const [org, setOrg] = useState('TestOrg');\r\n    const [currType, setCurrType] = useState(null);\r\n    const CurrIntegration = integrationMapping[currType];\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' sx={{ width: '100%' }}>\r\n            <Box display='flex' flexDirection='column'>\r\n                <TextField\r\n                    label=\"User\"\r\n                    value={user}\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    sx={{ mt: 2 }}\r\n                />\r\n                <TextField\r\n                    label=\"Organization\"\r\n                    value={org}\r\n                    onChange={(e) => setOrg(e.target.value)}\r\n                    sx={{ mt: 2 }}\r\n                />\r\n                <Autocomplete\r\n                    id=\"integration-type\"\r\n                    options={Object.keys(integrationMapping)}\r\n                    sx={{ width: 300, mt: 2 }}\r\n                    renderInput={(params) => <TextField {...params} label=\"Integration Type\" />}\r\n                    onChange={(e, value) => setCurrType(value)}\r\n                />\r\n            </Box>\r\n            {currType &&\r\n                <Box>\r\n                    <CurrIntegration user={user} org={org} integrationParams={integrationParams} setIntegrationParams={setIntegrationParams} />\r\n                </Box>\r\n            }\r\n            {integrationParams?.credentials &&\r\n                <Box sx={{ mt: 2 }}>\r\n                    <DataForm integrationType={integrationParams?.type} credentials={integrationParams?.credentials} />\r\n                </Box>\r\n            }\r\n        </Box>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}