{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monocept-HYD\\\\OneDrive - Monocept Consulting Pvt Ltd\\\\Desktop\\\\vscode\\\\hubspot_integration_fastapi\\\\frontend\\\\src\\\\data-form.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import {\n//     Box,\n//     TextField,\n//     Button,\n// } from '@mui/material';\n// import axios from 'axios';\n\n// const endpointMapping = {\n//     'HubSpot': 'hubspot'\n// };\n\n// export const DataForm = ({ integrationType, credentials }) => {\n//     const [loadedData, setLoadedData] = useState(null);\n//     const endpoint = endpointMapping[integrationType];\n\n//     // Function to load or to get all the objects from Hubspot / Notion / Airtable.\n//     const handleLoad = async () => {\n//         try {\n//             const formData = new FormData();\n//             formData.append('credentials', JSON.stringify(credentials));\n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n//             const data = response.data;\n//             setLoadedData(data);\n//         } catch (e) {\n//             alert(e?.response?.data?.detail);\n//         }\n//     }\n\n//     return (\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n//             <Box display='flex' flexDirection='column' width='100%'>\n//                 <TextField\n//                     label=\"Loaded Data\"\n//                     value={loadedData || ''}\n//                     sx={{mt: 2}}\n//                     InputLabelProps={{ shrink: true }}\n//                     disabled\n//                 />\n//                 <Button\n//                     onClick={handleLoad}\n//                     sx={{mt: 2}}\n//                     variant='contained'\n//                 >\n//                     Load Data\n//                 </Button>\n//                 <Button\n//                     onClick={() => setLoadedData(null)}\n//                     sx={{mt: 1}}\n//                     variant='contained'\n//                 >\n//                     Clear Data\n//                 </Button>\n//             </Box>\n//         </Box>\n//     );\n// }\n\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'HubSpot': 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n\n  // Function to load or to get all the objects from HubSpot / Notion / Airtable.\n  const handleLoad = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, {\n        credentials\n      },\n      // Send JSON directly\n      {\n        headers: {\n          'Content-Type': 'application/json' // Ensure JSON is sent properly\n        }\n      });\n      setLoadedData(response.data);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.error('Error loading data:', e);\n      alert((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || 'Failed to fetch data');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Loaded Data\",\n        value: loadedData ? JSON.stringify(loadedData, null, 2) : '',\n        sx: {\n          mt: 2\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        disabled: true,\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLoadedData(null),\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(DataForm, \"5cDt2cux/nLAg6lHurbYodgFI4w=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","endpoint","handleLoad","response","post","headers","data","e","_e$response","_e$response$data","console","error","alert","detail","display","justifyContent","alignItems","flexDirection","width","children","label","value","JSON","stringify","sx","mt","InputLabelProps","shrink","disabled","multiline","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Monocept-HYD/OneDrive - Monocept Consulting Pvt Ltd/Desktop/vscode/hubspot_integration_fastapi/frontend/src/data-form.js"],"sourcesContent":["// import { useState } from 'react';\r\n// import {\r\n//     Box,\r\n//     TextField,\r\n//     Button,\r\n// } from '@mui/material';\r\n// import axios from 'axios';\r\n\r\n// const endpointMapping = {\r\n//     'HubSpot': 'hubspot'\r\n// };\r\n\r\n// export const DataForm = ({ integrationType, credentials }) => {\r\n//     const [loadedData, setLoadedData] = useState(null);\r\n//     const endpoint = endpointMapping[integrationType];\r\n\r\n//     // Function to load or to get all the objects from Hubspot / Notion / Airtable.\r\n//     const handleLoad = async () => {\r\n//         try {\r\n//             const formData = new FormData();\r\n//             formData.append('credentials', JSON.stringify(credentials));\r\n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\r\n//             const data = response.data;\r\n//             setLoadedData(data);\r\n//         } catch (e) {\r\n//             alert(e?.response?.data?.detail);\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\r\n//             <Box display='flex' flexDirection='column' width='100%'>\r\n//                 <TextField\r\n//                     label=\"Loaded Data\"\r\n//                     value={loadedData || ''}\r\n//                     sx={{mt: 2}}\r\n//                     InputLabelProps={{ shrink: true }}\r\n//                     disabled\r\n//                 />\r\n//                 <Button\r\n//                     onClick={handleLoad}\r\n//                     sx={{mt: 2}}\r\n//                     variant='contained'\r\n//                 >\r\n//                     Load Data\r\n//                 </Button>\r\n//                 <Button\r\n//                     onClick={() => setLoadedData(null)}\r\n//                     sx={{mt: 1}}\r\n//                     variant='contained'\r\n//                 >\r\n//                     Clear Data\r\n//                 </Button>\r\n//             </Box>\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst endpointMapping = {\r\n    'HubSpot': 'hubspot'\r\n};\r\n\r\nexport const DataForm = ({ integrationType, credentials }) => {\r\n    const [loadedData, setLoadedData] = useState(null);\r\n    const endpoint = endpointMapping[integrationType];\r\n\r\n    // Function to load or to get all the objects from HubSpot / Notion / Airtable.\r\n    const handleLoad = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:8000/integrations/${endpoint}/load`,\r\n                { credentials }, // Send JSON directly\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json' // Ensure JSON is sent properly\r\n                    }\r\n                }\r\n            );\r\n            setLoadedData(response.data);\r\n        } catch (e) {\r\n            console.error('Error loading data:', e);\r\n            alert(e?.response?.data?.detail || 'Failed to fetch data');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\r\n            <Box display='flex' flexDirection='column' width='100%'>\r\n                <TextField\r\n                    label=\"Loaded Data\"\r\n                    value={loadedData ? JSON.stringify(loadedData, null, 2) : ''}\r\n                    sx={{ mt: 2 }}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled\r\n                    multiline\r\n                />\r\n                <Button\r\n                    onClick={handleLoad}\r\n                    sx={{ mt: 2 }}\r\n                    variant='contained'\r\n                >\r\n                    Load Data\r\n                </Button>\r\n                <Button\r\n                    onClick={() => setLoadedData(null)}\r\n                    sx={{ mt: 1 }}\r\n                    variant='contained'\r\n                >\r\n                    Clear Data\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}