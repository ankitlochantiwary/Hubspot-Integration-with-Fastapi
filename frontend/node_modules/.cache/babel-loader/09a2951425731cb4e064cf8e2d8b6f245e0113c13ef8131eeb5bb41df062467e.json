{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Monocept-HYD\\\\OneDrive - Monocept Consulting Pvt Ltd\\\\Desktop\\\\vscode\\\\hubspot_integration_fastapi\\\\frontend\\\\src\\\\data-form.js\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\n// import {\n//     Box,\n//     TextField,\n//     Button,\n// } from '@mui/material';\n// import axios from 'axios';\n\n// const endpointMapping = {\n//     'HubSpot': 'hubspot'\n// };\n\n// export const DataForm = ({ integrationType, credentials }) => {\n//     const [loadedData, setLoadedData] = useState(null);\n//     const endpoint = endpointMapping[integrationType];\n\n//     // Function to load or to get all the objects from Hubspot / Notion / Airtable.\n//     const handleLoad = async () => {\n//         try {\n//             const formData = new FormData();\n//             formData.append('credentials', JSON.stringify(credentials));\n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\n//             const data = response.data;\n//             setLoadedData(data);\n//         } catch (e) {\n//             alert(e?.response?.data?.detail);\n//         }\n//     }\n\n//     return (\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\n//             <Box display='flex' flexDirection='column' width='100%'>\n//                 <TextField\n//                     label=\"Loaded Data\"\n//                     value={loadedData || ''}\n//                     sx={{mt: 2}}\n//                     InputLabelProps={{ shrink: true }}\n//                     disabled\n//                 />\n//                 <Button\n//                     onClick={handleLoad}\n//                     sx={{mt: 2}}\n//                     variant='contained'\n//                 >\n//                     Load Data\n//                 </Button>\n//                 <Button\n//                     onClick={() => setLoadedData(null)}\n//                     sx={{mt: 1}}\n//                     variant='contained'\n//                 >\n//                     Clear Data\n//                 </Button>\n//             </Box>\n//         </Box>\n//     );\n// }\n\nimport { useState } from 'react';\nimport { Box, TextField, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpointMapping = {\n  'HubSpot': 'hubspot'\n};\nexport const DataForm = ({\n  integrationType,\n  credentials\n}) => {\n  _s();\n  const [loadedData, setLoadedData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const endpoint = endpointMapping[integrationType];\n\n  // Function to load all objects from HubSpot / Notion / Airtable.\n  const handleLoad = async () => {\n    try {\n      const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, credentials,\n      // Directly pass JSON object instead of FormData\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = response.data;\n      console.log(\"✅ Data fetched:\", data);\n      setLoadedData(JSON.stringify(data, null, 2));\n      setErrorMessage(null);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      console.error(\"❌ Fetch Error:\", e);\n\n      // Extract detailed error message\n      const errorDetail = (e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || (e === null || e === void 0 ? void 0 : e.message) || \"Unknown Error\";\n      setErrorMessage(errorDetail);\n      alert(`Failed to fetch data: ${errorDetail}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Loaded Data\",\n        value: loadedData || '',\n        sx: {\n          mt: 2\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        disabled: true,\n        multiline: true,\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Error\",\n        value: errorMessage,\n        sx: {\n          mt: 2,\n          backgroundColor: \"#ffcccc\"\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        disabled: true,\n        multiline: true,\n        rows: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLoad,\n        sx: {\n          mt: 2\n        },\n        variant: \"contained\",\n        children: \"Load Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setLoadedData(null),\n        sx: {\n          mt: 1\n        },\n        variant: \"contained\",\n        children: \"Clear Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(DataForm, \"SXXtYZFFTGFs5SMWi9QNnVLaVlk=\");\n_c = DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["useState","Box","TextField","Button","axios","jsxDEV","_jsxDEV","endpointMapping","DataForm","integrationType","credentials","_s","loadedData","setLoadedData","errorMessage","setErrorMessage","endpoint","handleLoad","response","post","headers","data","console","log","JSON","stringify","e","_e$response","_e$response$data","error","errorDetail","detail","message","alert","display","justifyContent","alignItems","flexDirection","width","children","label","value","sx","mt","InputLabelProps","shrink","disabled","multiline","rows","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Monocept-HYD/OneDrive - Monocept Consulting Pvt Ltd/Desktop/vscode/hubspot_integration_fastapi/frontend/src/data-form.js"],"sourcesContent":["// import { useState } from 'react';\r\n// import {\r\n//     Box,\r\n//     TextField,\r\n//     Button,\r\n// } from '@mui/material';\r\n// import axios from 'axios';\r\n\r\n// const endpointMapping = {\r\n//     'HubSpot': 'hubspot'\r\n// };\r\n\r\n// export const DataForm = ({ integrationType, credentials }) => {\r\n//     const [loadedData, setLoadedData] = useState(null);\r\n//     const endpoint = endpointMapping[integrationType];\r\n\r\n//     // Function to load or to get all the objects from Hubspot / Notion / Airtable.\r\n//     const handleLoad = async () => {\r\n//         try {\r\n//             const formData = new FormData();\r\n//             formData.append('credentials', JSON.stringify(credentials));\r\n//             const response = await axios.post(`http://localhost:8000/integrations/${endpoint}/load`, formData);\r\n//             const data = response.data;\r\n//             setLoadedData(data);\r\n//         } catch (e) {\r\n//             alert(e?.response?.data?.detail);\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\r\n//             <Box display='flex' flexDirection='column' width='100%'>\r\n//                 <TextField\r\n//                     label=\"Loaded Data\"\r\n//                     value={loadedData || ''}\r\n//                     sx={{mt: 2}}\r\n//                     InputLabelProps={{ shrink: true }}\r\n//                     disabled\r\n//                 />\r\n//                 <Button\r\n//                     onClick={handleLoad}\r\n//                     sx={{mt: 2}}\r\n//                     variant='contained'\r\n//                 >\r\n//                     Load Data\r\n//                 </Button>\r\n//                 <Button\r\n//                     onClick={() => setLoadedData(null)}\r\n//                     sx={{mt: 1}}\r\n//                     variant='contained'\r\n//                 >\r\n//                     Clear Data\r\n//                 </Button>\r\n//             </Box>\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n\r\n\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst endpointMapping = {\r\n    'HubSpot': 'hubspot'\r\n};\r\n\r\nexport const DataForm = ({ integrationType, credentials }) => {\r\n    const [loadedData, setLoadedData] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const endpoint = endpointMapping[integrationType];\r\n\r\n    // Function to load all objects from HubSpot / Notion / Airtable.\r\n    const handleLoad = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:8000/integrations/${endpoint}/load`,\r\n                credentials,  // Directly pass JSON object instead of FormData\r\n                { headers: { \"Content-Type\": \"application/json\" } } \r\n            );\r\n\r\n            const data = response.data;\r\n            console.log(\"✅ Data fetched:\", data);\r\n            setLoadedData(JSON.stringify(data, null, 2));\r\n            setErrorMessage(null);\r\n        } catch (e) {\r\n            console.error(\"❌ Fetch Error:\", e);\r\n\r\n            // Extract detailed error message\r\n            const errorDetail = e?.response?.data?.detail || e?.message || \"Unknown Error\";\r\n            setErrorMessage(errorDetail);\r\n            alert(`Failed to fetch data: ${errorDetail}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='center' alignItems='center' flexDirection='column' width='100%'>\r\n            <Box display='flex' flexDirection='column' width='100%'>\r\n                <TextField\r\n                    label=\"Loaded Data\"\r\n                    value={loadedData || ''}\r\n                    sx={{ mt: 2 }}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    disabled\r\n                    multiline\r\n                    rows={5}\r\n                />\r\n                {errorMessage && (\r\n                    <TextField\r\n                        label=\"Error\"\r\n                        value={errorMessage}\r\n                        sx={{ mt: 2, backgroundColor: \"#ffcccc\" }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                        disabled\r\n                        multiline\r\n                        rows={2}\r\n                    />\r\n                )}\r\n                <Button onClick={handleLoad} sx={{ mt: 2 }} variant='contained'>\r\n                    Load Data\r\n                </Button>\r\n                <Button onClick={() => setLoadedData(null)} sx={{ mt: 1 }} variant='contained'>\r\n                    Clear Data\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}